---
pt:
  expectation_Assigns_except: '%{binding} %{must} atribuir algo diferente a %{target}'
  expectation_Assigns_like: '%{binding} %{must} atribuir algo semelhante ao %{target}'
  expectation_Assigns_named: '%{binding} %{must} atribuir %{target}'
  expectation_Assigns: '%{binding} %{must} fazer atribuições'
  expectation_Calls_except: '%{binding} %{must} delegar algo diferente para %{target}'
  expectation_Calls_like: '%{binding} %{must} delegar algo semelhante ao %{target}'
  expectation_Calls_named: '%{binding} %{must} usar %{target}'
  expectation_Calls: '%{binding} %{must} delegate'
  expectation_Declares_except: '%{binding} %{must} contém instruções diferentes de %{target}'
  expectation_Declares_like: '%{binding} %{must} declarar um identificador semelhante a %{target}'
  expectation_Declares_named: '%{binding} %{must} declarar %{target}'
  expectation_Declares: '%{binding} %{must} contém declarações'
  expectation_DeclaresAttribute_except: '%{binding} %{must} declarar atributos diferentes de %{target}'
  expectation_DeclaresAttribute_like: '%{binding} %{must} declarar um atributo semelhante a %{target}'
  expectation_DeclaresAttribute_named: '%{binding} %{must} declarar um atributo %{target}'
  expectation_DeclaresAttribute: '%{binding} %{must} declarar atributos'
  expectation_DeclaresClass_except: '%{binding} %{must} declarar classes diferentes para %{target}'
  expectation_DeclaresClass_like: '%{binding} %{must} declarar uma classe semelhante a %{target}'
  expectation_DeclaresClass_named: '%{binding} %{must} declarar uma classe %{target}'
  expectation_DeclaresClass: '%{binding} %{must} declarar classes'
  expectation_DeclaresComputation_except: '%{binding} %{must} declarar cálculos diferentes de %{target}'
  expectation_DeclaresComputation_like: '%{binding} %{must} declarar uma computação semelhante a %{target}'
  expectation_DeclaresComputation_named: '%{binding} %{must} declarar uma computação %{target}'
  expectation_DeclaresComputation: '%{binding} %{must} declarar cálculos'
  expectation_DeclaresComputationWithArity0_named: '%{target} %{must} declarar parâmetros zero'
  expectation_DeclaresComputationWithArity1_named: '%{target} %{must} tem um parâmetro'
  expectation_DeclaresComputationWithArity2_named: '%{target} %{must} tem dois parâmetros'
  expectation_DeclaresComputationWithArity3_named: '%{target} %{must} tem três parâmetros'
  expectation_DeclaresComputationWithArity4_named: '%{target} %{must} tem quatro parâmetros'
  expectation_DeclaresComputationWithArity5_named: '%{target} %{must} tem cinco parâmetros'
  expectation_DeclaresEntryPoint: '%{binding} %{must} declarar um ponto de entrada'
  expectation_DeclaresEnumeration_except: '%{binding} %{must} declarar enumerações que não são chamadas %{target}'
  expectation_DeclaresEnumeration_like: '%{binding} %{must} declarar uma enumeração de nome semelhante a %{target}'
  expectation_DeclaresEnumeration_named: '%{binding} %{must} declarar uma enumeração %{target}'
  expectation_DeclaresEnumeration: '%{binding} %{must} declarar enumerações'
  expectation_DeclaresFact_except: '%{binding} %{must} declarar fatos diferentes de %{target}'
  expectation_DeclaresFact_like: '%{binding} %{must} declarar um fato semelhante a %{target}'
  expectation_DeclaresFact_named: '%{binding} %{must} declarar um fato %{target}'
  expectation_DeclaresFact: '%{binding} %{must} declarar fatos'
  expectation_DeclaresFunction_except: '%{binding} %{must} declarar funções diferentes de %{target}'
  expectation_DeclaresFunction_like: '%{binding} %{must} declarar uma função semelhante a %{target}'
  expectation_DeclaresFunction_named: '%{binding} %{must} declarar uma função %{target}'
  expectation_DeclaresFunction: '%{binding} %{must} deve declarar funções'
  expectation_DeclaresInterface_except: '%{binding} %{must} declarar interfaces que não são chamadas %{target}'
  expectation_DeclaresInterface_like: '%{binding} %{must} declarar uma interface de nome semelhante a %{target}'
  expectation_DeclaresInterface_named: '%{binding} %{must} declarar uma interface %{target}'
  expectation_DeclaresInterface: '%{binding} %{must} declarar interfaces'
  expectation_DeclaresMethod_except: '%{binding} %{must} declarar métodos diferentes de %{target}'
  expectation_DeclaresMethod_like: '%{binding} %{must} declarar um método semelhante a %{target}'
  expectation_DeclaresMethod_named: '%{binding} %{must} declarar um método %{target}'
  expectation_DeclaresMethod: '%{binding} %{must} declarar métodos'
  expectation_DeclaresObject_except: '%{binding} %{must} declarar objetos diferentes de %{target}'
  expectation_DeclaresObject_like: '%{binding} %{must} declarar um objeto semelhante a %{target}'
  expectation_DeclaresObject_named: '%{binding} %{must} declarar um objeto %{target}'
  expectation_DeclaresObject: '%{binding} %{must} declarar objetos'
  expectation_DeclaresPredicate_except: '%{binding} %{must} declarar predicados diferentes para %{target}'
  expectation_DeclaresPredicate_like: '%{binding} %{must} declarar um predicado semelhante ao %{target}'
  expectation_DeclaresPredicate_named: '%{binding} %{must} declarar um predicado %{target}'
  expectation_DeclaresPredicate: '%{binding} %{must} declarar predicados'
  expectation_DeclaresProcedure_except: '%{binding} %{must} declarar procedimentos diferentes de %{target}'
  expectation_DeclaresProcedure_like: '%{binding} %{must} declarar um procedimento semelhante a %{target}'
  expectation_DeclaresProcedure_named: '%{binding} %{must} declarar um procedimento %{target}'
  expectation_DeclaresProcedure: '%{binding} %{must} declarar procedimentos'
  expectation_DeclaresRecursively_named: '%{target} %{must} deve ser declarado recursivamente'
  expectation_DeclaresRule_except: '%{binding} %{must} declarar regras diferentes de %{target}'
  expectation_DeclaresRule_like: '%{binding} %{must} declarar uma regra semelhante a %{target}'
  expectation_DeclaresRule_named: '%{binding} %{must} declarar uma regra %{target}'
  expectation_DeclaresRule: '%{binding} %{must} deve declarar regras'
  expectation_DeclaresStyle_except: '%{binding} %{must} declarar um estilo diferentes de %{target}'
  expectation_DeclaresStyle_like: '%{binding} %{must} declarar um estilo semelhante a %{target}'
  expectation_DeclaresStyle_named: '%{binding} %{must} declarar um estilo %{target}'
  expectation_DeclaresStyle: '%{binding} %{must} declarar um estilo'
  expectation_DeclaresSuperclass_except: '%{binding} %{must} declarar uma superclasse diferente de %{target}'
  expectation_DeclaresSuperclass_like: '%{binding} %{must} declarar uma superclasse semelhante a %{target}'
  expectation_DeclaresSuperclass_named: '%{binding} %{must} declarar uma superclasse %{target}'
  expectation_DeclaresSuperclass: '%{binding} %{must} declarar uma superclasse'
  expectation_DeclaresTag_except: '%{binding} %{must} declarar uma etiqueta diferente de %{target}'
  expectation_DeclaresTag_like: '%{binding} %{must} declarar uma etiqueta similar a %{target}'
  expectation_DeclaresTag_named: '%{binding} %{must} declarar uma etiqueta %{target}'
  expectation_DeclaresTag: '%{binding} %{must} declarar uma etiqueta'
  expectation_DeclaresTypeAlias_except: '%{binding} %{must} declarar sinônimos de tipo diferente de %{target}'
  expectation_DeclaresTypeAlias_like: '%{binding} %{must} declarar um sinônimo de tipo similar a %{target}'
  expectation_DeclaresTypeAlias_named: '%{binding} %{must} declarar um sinônimo do tipo %{target}'
  expectation_DeclaresTypeAlias: '%{binding} %{must} declarar o tipo de sinônimos'
  expectation_DeclaresTypeSignature_except: '%{binding} %{must} declarar assinaturas de tipos diferentes de %{target}'
  expectation_DeclaresTypeSignature_like: '%{binding} %{must} declarar uma assinatura para algo semelhante %{target}'
  expectation_DeclaresTypeSignature_named: '%{binding} %{must} declarar uma assinatura %{target}'
  expectation_DeclaresTypeSignature: '%{binding} %{must} excluir assinaturas de tipo'
  expectation_DeclaresVariable_except: '%{binding} %{must} declarar variáveis ​​diferentes de %{target}'
  expectation_DeclaresVariable_like: '%{binding} %{must} declarar uma variável semelhante a %{target}'
  expectation_DeclaresVariable_named: '%{binding} %{must} declarar uma variável %{target}'
  expectation_DeclaresVariable: '%{binding} %{must} deve declarar variáveis'
  expectation_DiscardsExceptions: '%{binding}  está silenciosamente ignorando exceções.'
  expectation_DoesConsolePrint: '%{binding}  está fazendo impressões na tela.'
  expectation_DoesNilTest: '%{binding}  faz comparações contra <i>%{keyword_null}</i>'
  expectation_DoesNullTest: '%{binding}  faz comparações contra <i>%{keyword_null}</i>'
  expectation_DoesTypeTest: '%{binding}  faz comparações contra strings'
  expectation_HasAssignmentReturn: '%{binding}  retorna o resultado de uma tarefa'
  expectation_HasCodeDuplication: '%{binding}  tem código repetido'
  expectation_HasEmptyIfBranches: '%{binding} tem vazio <i>%{keyword_if}</i> ramos'
  expectation_HasMisspelledBindings: '%{binding}  está incorreto. Verifique a ortografia e tente não usar abreviaturas'
  expectation_HasMisspelledIdentifiers: '%{binding}  está incorreto. Verifique a ortografia e tente não usar abreviaturas'
  expectation_HasRedundantBooleanComparison: '%{binding}  faz comparações booleanas desnecessárias'
  expectation_HasRedundantGuards: '%{binding}  possui protetores desnecessários'
  expectation_HasRedundantIf: '%{binding}  tem desnecessário ifs'
  expectation_HasRedundantLambda: '%{binding}  possui lambdas desnecessários'
  expectation_HasRedundantLocalVariableReturn: '%{binding}  usa variáveis ​​locais desnecessárias; você pode retornar a expressão diretamente'
  expectation_HasRedundantParameter: '%{binding}  possui parâmetros desnecessários (pode ser removido por ponto-livre)'
  expectation_HasRedundantReduction: '%{binding}  usa <i>%{keyword_is}</i>, mas não executa cálculos.'
  expectation_HasTooShortBindings: '%{binding}  é um identificador muito curto'
  expectation_HasTooShortIdentifiers: '%{binding}  é um identificador muito curto'
  expectation_HasTooShortIdentifiers: '%{binding}  é um identificador muito curto'
  expectation_HasUnreachableCode: '%{binding} tem código inacessível.'
  expectation_HasWrongCaseBindings: '%{binding}  não respeita a convenção de nomenclatura'
  expectation_HasWrongCaseIdentifiers: '%{binding}  não respeita a convenção de nomenclatura'
  expectation_Implements_except: '%{binding} %{must} implementar interfaces diferentes de %{target}'
  expectation_Implements_like: '%{binding} %{must} implementar interfaces semelhantes a %{target}'
  expectation_Implements_named: '%{binding} %{must} implementar %{target}'
  expectation_Implements: '%{binding} %{must} implementar interfaces'
  expectation_Inherits_except: '%{binding} %{must} declarar uma superclasse diferente de %{target}'
  expectation_Inherits_like: '%{binding} %{must} declarar uma superclasse semelhante a %{target}'
  expectation_Inherits_named: '%{binding} %{must} declarar uma superclasse %{target}'
  expectation_Inherits: '%{binding} %{must} declarar uma superclasse'
  expectation_Instantiates_except: '%{binding} %{must} instanciar classes diferentes de %{target}'
  expectation_Instantiates_like: '%{binding} %{must} instanciar classes semelhantes a %{target}'
  expectation_Instantiates_named: '%{binding} %{must} instantiate %{target}'
  expectation_Instantiates: '%{binding} %{must} instanciar objetos'
  expectation_IsLongCode: '%{binding}  é muito longo. Tente delegar mais'
  expectation_must_not: 'não deve'
  expectation_must: 'deve'
  expectation_Raises_except: '%{binding} %{must} lançar exceções diferentes de %{target}'
  expectation_Raises_like: '%{binding} %{must} lançar exceções semelhantes a %{target}'
  expectation_Raises_named: '%{binding} %{must} launch %{target}'
  expectation_Raises: '%{binding} %{must} lançar exceções'
  expectation_Rescues_except: '%{binding} %{must} capturar exceções que não sejam %{target}'
  expectation_Rescues_like: '%{binding} %{must} capturar exceções semelhantes a %{target}'
  expectation_Rescues_named: '%{binding} %{must} capture %{target}'
  expectation_Rescues: '%{binding} %{must} capturar exceções'
  expectation_ReturnsNil: '%{binding}  retorna nulo, o que é uma prática ruim'
  expectation_ReturnsNull: '%{binding}  retorna nulo, o que é uma prática ruim'
  expectation_solution: 'a solução'
  expectation_SourceContains_named: 'a solução  %{must} usar %{target}'
  expectation_SourceEquals_named: 'a solução  %{must} ser igual a %{target}'
  expectation_SourceEqualsIgnoreSpaces_named: 'a solução  %{must} ser igual a %{target}'
  expectation_SourceRepeats_named: 'a solução  %{must} usar %{target} mais de uma vez'
  expectation_TypesAs_named: '%{binding} %{must} é do tipo %{target}'
  expectation_TypesAs: '%{binding} %{must} tem tipo'
  expectation_TypesReturnAs_named: '%{binding} %{must} tem tipo de valor de retorno %{target}'
  expectation_TypesReturnAs: '%{binding} %{must} tem tipo de valor de retorno'
  expectation_Uses_except: '%{binding} %{must} delegar algo diferente para %{target}'
  expectation_Uses_like: '%{binding} %{must} delegar algo semelhante ao %{target}'
  expectation_Uses_named: '%{binding} %{must} usar %{target}'
  expectation_Uses: '%{binding} %{must} delegar'
  expectation_UsesAnonymousVariable: '%{binding} %{must} usar uma variável anônima'
  expectation_UsesComposition: '%{binding} %{must} usar a composição'
  expectation_UsesComprehension: '%{binding} %{must} usar listas pelo entendimento'
  expectation_UsesConditional: '%{binding} %{must} usar conditional'
  expectation_UsesCut: '%{binding}  usa o operador !, que é uma má prática'
  expectation_UsesDyamicPolymorphism: '%{binding} %{must} usar polimorfismo'
  expectation_UsesDynamicMethodOverload: '%{binding} %{must} usar sobrecarga'
  expectation_UsesExceptionHandling: '%{binding} %{must} executar o tratamento de exceção'
  expectation_UsesExceptions: '%{binding} %{must} usar exceções'
  expectation_UsesFail: '%{binding}  usa <i>%{keyword_fail}</li>, o que é uma prática ruim'
  expectation_UsesFindall: '%{binding} %{must} usar <i>%{keyword_findall}</i>'
  expectation_UsesForall: '%{binding} %{must} usar <i>%{keyword_forall}</i>'
  expectation_UsesForeach: '%{binding} %{must} usar <i>%{keyword_foreach}</i>'
  expectation_UsesGuards: '%{binding} %{must} usar guardas'
  expectation_UsesIf: '%{binding} %{must} usar <i>%{keyword_if}</i>'
  expectation_UsesInheritance: '%{binding} %{must} usar herança'
  expectation_UsesLambda: '%{binding} %{must} usar expressões lambda'
  expectation_UsesLoop: '%{binding} %{must} usar um loop'
  expectation_UsesMixins: '%{binding} %{must} usar mixins'
  expectation_UsesNot: '%{binding} %{must} usar <i>%{keyword_not}</i>'
  expectation_UsesObjectComposition: '%{binding} %{must} usar composição'
  expectation_UsesPatternMatching: '%{binding} %{must} usar o padrão de correspondência'
  expectation_UsesRepeat: '%{binding} %{must} usar <i>%{keyword_repeat}</i>'
  expectation_UsesRepeatOf: '%{binding} %{must} usar uma <i>%{keyword_repeat}</i> de %{target}'
  expectation_UsesStaticMethodOverload: '%{binding} %{must} usar sobrecarga'
  expectation_UsesStaticPolymorphism: '%{binding} %{must} usar polimorfismo'
  expectation_UsesSwitch: '%{binding} %{must} usar um <i>%{keyword_switch}</i>'
  expectation_UsesTemplateMethod: '%{binding} %{must} usar um _template method_'
  expectation_UsesUnificationOperator: '%{binding}  usa o operador de unificação (=)'
  expectation_UsesWhile: '%{binding} %{must} usar um <i>%{keyword_while}</i>'
