---
pt:
  mumukit:
    expectation:
      must_not: 'não deve'
      must: 'deve'
      solution: 'a solução'
    inspection:
      Assigns_except: '%{binding} %{must} atribuir algo diferente a %{target}'
      Assigns_like: '%{binding} %{must} atribuir algo semelhante ao %{target}'
      Assigns_named: '%{binding} %{must} atribuir %{target}'
      Assigns: '%{binding} %{must} fazer atribuições'
      Calls_except: '%{binding} %{must} delegar algo diferente para %{target}'
      Calls_like: '%{binding} %{must} delegar algo semelhante ao %{target}'
      Calls_named: '%{binding} %{must} usar %{target}'
      Calls: '%{binding} %{must} delegate'
      Declares_except: '%{binding} %{must} contém instruções diferentes de %{target}'
      Declares_like: '%{binding} %{must} declarar um identificador semelhante a %{target}'
      Declares_named: '%{binding} %{must} declarar %{target}'
      Declares: '%{binding} %{must} contém declarações'
      DeclaresAttribute_except: '%{binding} %{must} declarar atributos diferentes de %{target}'
      DeclaresAttribute_like: '%{binding} %{must} declarar um atributo semelhante a %{target}'
      DeclaresAttribute_named: '%{binding} %{must} declarar um atributo %{target}'
      DeclaresAttribute: '%{binding} %{must} declarar atributos'
      DeclaresClass_except: '%{binding} %{must} declarar classes diferentes para %{target}'
      DeclaresClass_like: '%{binding} %{must} declarar uma classe semelhante a %{target}'
      DeclaresClass_named: '%{binding} %{must} declarar uma classe %{target}'
      DeclaresClass: '%{binding} %{must} declarar classes'
      DeclaresComputation_except: '%{binding} %{must} declarar cálculos diferentes de %{target}'
      DeclaresComputation_like: '%{binding} %{must} declarar uma computação semelhante a %{target}'
      DeclaresComputation_named: '%{binding} %{must} declarar uma computação %{target}'
      DeclaresComputation: '%{binding} %{must} declarar cálculos'
      DeclaresComputationWithArity0_named: '%{target} %{must} declarar parâmetros zero'
      DeclaresComputationWithArity1_named: '%{target} %{must} tem um parâmetro'
      DeclaresComputationWithArity2_named: '%{target} %{must} tem dois parâmetros'
      DeclaresComputationWithArity3_named: '%{target} %{must} tem três parâmetros'
      DeclaresComputationWithArity4_named: '%{target} %{must} tem quatro parâmetros'
      DeclaresComputationWithArity5_named: '%{target} %{must} tem cinco parâmetros'
      DeclaresEntryPoint: '%{binding} %{must} declarar um ponto de entrada'
      DeclaresEnumeration_except: '%{binding} %{must} declarar enumerações que não são chamadas %{target}'
      DeclaresEnumeration_like: '%{binding} %{must} declarar uma enumeração de nome semelhante a %{target}'
      DeclaresEnumeration_named: '%{binding} %{must} declarar uma enumeração %{target}'
      DeclaresEnumeration: '%{binding} %{must} declarar enumerações'
      DeclaresFact_except: '%{binding} %{must} declarar fatos diferentes de %{target}'
      DeclaresFact_like: '%{binding} %{must} declarar um fato semelhante a %{target}'
      DeclaresFact_named: '%{binding} %{must} declarar um fato %{target}'
      DeclaresFact: '%{binding} %{must} declarar fatos'
      DeclaresFunction_except: '%{binding} %{must} declarar funções diferentes de %{target}'
      DeclaresFunction_like: '%{binding} %{must} declarar uma função semelhante a %{target}'
      DeclaresFunction_named: '%{binding} %{must} declarar uma função %{target}'
      DeclaresFunction: '%{binding} %{must} deve declarar funções'
      DeclaresInterface_except: '%{binding} %{must} declarar interfaces que não são chamadas %{target}'
      DeclaresInterface_like: '%{binding} %{must} declarar uma interface de nome semelhante a %{target}'
      DeclaresInterface_named: '%{binding} %{must} declarar uma interface %{target}'
      DeclaresInterface: '%{binding} %{must} declarar interfaces'
      DeclaresMethod_except: '%{binding} %{must} declarar métodos diferentes de %{target}'
      DeclaresMethod_like: '%{binding} %{must} declarar um método semelhante a %{target}'
      DeclaresMethod_named: '%{binding} %{must} declarar um método %{target}'
      DeclaresMethod: '%{binding} %{must} declarar métodos'
      DeclaresObject_except: '%{binding} %{must} declarar objetos diferentes de %{target}'
      DeclaresObject_like: '%{binding} %{must} declarar um objeto semelhante a %{target}'
      DeclaresObject_named: '%{binding} %{must} declarar um objeto %{target}'
      DeclaresObject: '%{binding} %{must} declarar objetos'
      DeclaresPredicate_except: '%{binding} %{must} declarar predicados diferentes para %{target}'
      DeclaresPredicate_like: '%{binding} %{must} declarar um predicado semelhante ao %{target}'
      DeclaresPredicate_named: '%{binding} %{must} declarar um predicado %{target}'
      DeclaresPredicate: '%{binding} %{must} declarar predicados'
      DeclaresProcedure_except: '%{binding} %{must} declarar procedimentos diferentes de %{target}'
      DeclaresProcedure_like: '%{binding} %{must} declarar um procedimento semelhante a %{target}'
      DeclaresProcedure_named: '%{binding} %{must} declarar um procedimento %{target}'
      DeclaresProcedure: '%{binding} %{must} declarar procedimentos'
      DeclaresRecursively_named: '%{target} %{must} deve ser declarado recursivamente'
      DeclaresRule_except: '%{binding} %{must} declarar regras diferentes de %{target}'
      DeclaresRule_like: '%{binding} %{must} declarar uma regra semelhante a %{target}'
      DeclaresRule_named: '%{binding} %{must} declarar uma regra %{target}'
      DeclaresRule: '%{binding} %{must} deve declarar regras'
      DeclaresStyle_except: '%{binding} %{must} declarar um estilo diferentes de %{target}'
      DeclaresStyle_like: '%{binding} %{must} declarar um estilo semelhante a %{target}'
      DeclaresStyle_named: '%{binding} %{must} declarar um estilo %{target}'
      DeclaresStyle: '%{binding} %{must} declarar um estilo'
      DeclaresSuperclass_except: '%{binding} %{must} declarar uma superclasse diferente de %{target}'
      DeclaresSuperclass_like: '%{binding} %{must} declarar uma superclasse semelhante a %{target}'
      DeclaresSuperclass_named: '%{binding} %{must} declarar uma superclasse %{target}'
      DeclaresSuperclass: '%{binding} %{must} declarar uma superclasse'
      DeclaresTag_except: '%{binding} %{must} declarar uma etiqueta diferente de %{target}'
      DeclaresTag_like: '%{binding} %{must} declarar uma etiqueta similar a %{target}'
      DeclaresTag_named: '%{binding} %{must} declarar uma etiqueta %{target}'
      DeclaresTag: '%{binding} %{must} declarar uma etiqueta'
      DeclaresTypeAlias_except: '%{binding} %{must} declarar sinônimos de tipo diferente de %{target}'
      DeclaresTypeAlias_like: '%{binding} %{must} declarar um sinônimo de tipo similar a %{target}'
      DeclaresTypeAlias_named: '%{binding} %{must} declarar um sinônimo do tipo %{target}'
      DeclaresTypeAlias: '%{binding} %{must} declarar o tipo de sinônimos'
      DeclaresTypeSignature_except: '%{binding} %{must} declarar assinaturas de tipos diferentes de %{target}'
      DeclaresTypeSignature_like: '%{binding} %{must} declarar uma assinatura para algo semelhante %{target}'
      DeclaresTypeSignature_named: '%{binding} %{must} declarar uma assinatura %{target}'
      DeclaresTypeSignature: '%{binding} %{must} excluir assinaturas de tipo'
      DeclaresVariable_except: '%{binding} %{must} declarar variáveis ​​diferentes de %{target}'
      DeclaresVariable_like: '%{binding} %{must} declarar uma variável semelhante a %{target}'
      DeclaresVariable_named: '%{binding} %{must} declarar uma variável %{target}'
      DeclaresVariable: '%{binding} %{must} deve declarar variáveis'
      DiscardsExceptions: '%{binding}  está silenciosamente ignorando exceções.'
      DoesConsolePrint: '%{binding}  está fazendo impressões na tela.'
      DoesNilTest: '%{binding}  faz comparações contra <i>%{keyword_null}</i>'
      DoesNullTest: '%{binding}  faz comparações contra <i>%{keyword_null}</i>'
      DoesTypeTest: '%{binding}  faz comparações contra strings'
      HasAssignmentReturn: '%{binding}  retorna o resultado de uma tarefa'
      HasCodeDuplication: '%{binding}  tem código repetido'
      HasEmptyIfBranches: '%{binding} tem vazio <i>%{keyword_if}</i> ramos'
      HasMisspelledBindings: '%{binding}  está incorreto. Verifique a ortografia e tente não usar abreviaturas'
      HasMisspelledIdentifiers: '%{binding}  está incorreto. Verifique a ortografia e tente não usar abreviaturas'
      HasRedundantBooleanComparison: '%{binding}  faz comparações booleanas desnecessárias'
      HasRedundantGuards: '%{binding}  possui protetores desnecessários'
      HasRedundantIf: '%{binding}  tem desnecessário ifs'
      HasRedundantLambda: '%{binding}  possui lambdas desnecessários'
      HasRedundantLocalVariableReturn: '%{binding}  usa variáveis ​​locais desnecessárias; você pode retornar a expressão diretamente'
      HasRedundantParameter: '%{binding}  possui parâmetros desnecessários (pode ser removido por ponto-livre)'
      HasRedundantReduction: '%{binding}  usa <i>%{keyword_is}</i>, mas não executa cálculos.'
      HasTooShortBindings: '%{binding}  é um identificador muito curto'
      HasTooShortIdentifiers: '%{binding}  é um identificador muito curto'
      HasTooShortIdentifiers: '%{binding}  é um identificador muito curto'
      HasUnreachableCode: '%{binding} tem código inacessível.'
      HasWrongCaseBindings: '%{binding}  não respeita a convenção de nomenclatura'
      HasWrongCaseIdentifiers: '%{binding}  não respeita a convenção de nomenclatura'
      Implements_except: '%{binding} %{must} implementar interfaces diferentes de %{target}'
      Implements_like: '%{binding} %{must} implementar interfaces semelhantes a %{target}'
      Implements_named: '%{binding} %{must} implementar %{target}'
      Implements: '%{binding} %{must} implementar interfaces'
      Inherits_except: '%{binding} %{must} declarar uma superclasse diferente de %{target}'
      Inherits_like: '%{binding} %{must} declarar uma superclasse semelhante a %{target}'
      Inherits_named: '%{binding} %{must} declarar uma superclasse %{target}'
      Inherits: '%{binding} %{must} declarar uma superclasse'
      Instantiates_except: '%{binding} %{must} instanciar classes diferentes de %{target}'
      Instantiates_like: '%{binding} %{must} instanciar classes semelhantes a %{target}'
      Instantiates_named: '%{binding} %{must} instantiate %{target}'
      Instantiates: '%{binding} %{must} instanciar objetos'
      IsLongCode: '%{binding}  é muito longo. Tente delegar mais'
      Raises_except: '%{binding} %{must} lançar exceções diferentes de %{target}'
      Raises_like: '%{binding} %{must} lançar exceções semelhantes a %{target}'
      Raises_named: '%{binding} %{must} launch %{target}'
      Raises: '%{binding} %{must} lançar exceções'
      Rescues_except: '%{binding} %{must} capturar exceções que não sejam %{target}'
      Rescues_like: '%{binding} %{must} capturar exceções semelhantes a %{target}'
      Rescues_named: '%{binding} %{must} capture %{target}'
      Rescues: '%{binding} %{must} capturar exceções'
      ReturnsNil: '%{binding}  retorna nulo, o que é uma prática ruim'
      ReturnsNull: '%{binding}  retorna nulo, o que é uma prática ruim'
      SourceContains_named: 'a solução  %{must} usar %{target}'
      SourceEquals_named: 'a solução  %{must} ser igual a %{target}'
      SourceEqualsIgnoreSpaces_named: 'a solução  %{must} ser igual a %{target}'
      SourceRepeats_named: 'a solução  %{must} usar %{target} mais de uma vez'
      TypesAs_named: '%{binding} %{must} é do tipo %{target}'
      TypesAs: '%{binding} %{must} tem tipo'
      TypesReturnAs_named: '%{binding} %{must} tem tipo de valor de retorno %{target}'
      TypesReturnAs: '%{binding} %{must} tem tipo de valor de retorno'
      Uses_except: '%{binding} %{must} delegar algo diferente para %{target}'
      Uses_like: '%{binding} %{must} delegar algo semelhante ao %{target}'
      Uses_named: '%{binding} %{must} usar %{target}'
      Uses: '%{binding} %{must} delegar'
      UsesAnonymousVariable: '%{binding} %{must} usar uma variável anônima'
      UsesComposition: '%{binding} %{must} usar a composição'
      UsesComprehension: '%{binding} %{must} usar listas pelo entendimento'
      UsesConditional: '%{binding} %{must} usar conditional'
      UsesCut: '%{binding}  usa o operador !, que é uma má prática'
      UsesDyamicPolymorphism: '%{binding} %{must} usar polimorfismo'
      UsesDynamicMethodOverload: '%{binding} %{must} usar sobrecarga'
      UsesExceptionHandling: '%{binding} %{must} executar o tratamento de exceção'
      UsesExceptions: '%{binding} %{must} usar exceções'
      UsesFail: '%{binding}  usa <i>%{keyword_fail}</li>, o que é uma prática ruim'
      UsesFindall: '%{binding} %{must} usar <i>%{keyword_findall}</i>'
      UsesForall: '%{binding} %{must} usar <i>%{keyword_forall}</i>'
      UsesForeach: '%{binding} %{must} usar <i>%{keyword_foreach}</i>'
      UsesGuards: '%{binding} %{must} usar guardas'
      UsesIf: '%{binding} %{must} usar <i>%{keyword_if}</i>'
      UsesInheritance: '%{binding} %{must} usar herança'
      UsesLambda: '%{binding} %{must} usar expressões lambda'
      UsesLoop: '%{binding} %{must} usar um loop'
      UsesMixins: '%{binding} %{must} usar mixins'
      UsesNot: '%{binding} %{must} usar <i>%{keyword_not}</i>'
      UsesObjectComposition: '%{binding} %{must} usar composição'
      UsesPatternMatching: '%{binding} %{must} usar o padrão de correspondência'
      UsesRepeat: '%{binding} %{must} usar <i>%{keyword_repeat}</i>'
      UsesRepeatOf: '%{binding} %{must} usar uma <i>%{keyword_repeat}</i> de %{target}'
      UsesStaticMethodOverload: '%{binding} %{must} usar sobrecarga'
      UsesStaticPolymorphism: '%{binding} %{must} usar polimorfismo'
      UsesSwitch: '%{binding} %{must} usar um <i>%{keyword_switch}</i>'
      UsesTemplateMethod: '%{binding} %{must} usar um _template method_'
      UsesUnificationOperator: '%{binding}  usa o operador de unificação (=)'
      UsesWhile: '%{binding} %{must} usar um <i>%{keyword_while}</i>'
