---
es:
  expectation_must: debe
  expectation_must_not: no debe
  expectation_DoesTypeTest: '%{binding} hace comparaciones de strings innecesarias'
  expectation_HasAnonymousVariable: '%{binding} %{must} utilizar una variable anónima'
  expectation_HasArity0: '%{binding} %{must} no debe tener parametros'
  expectation_HasArity1: '%{binding} %{must} debe tener un parámetro'
  expectation_HasArity2: '%{binding} %{must} debe tener dos parámetros'
  expectation_HasArity3: '%{binding} %{must} debe tener tres parámetros'
  expectation_HasArity: '%{binding} %{must} tener %{target} parámetros'
  expectation_HasAttribute: 'el atributo %{binding} %{must} estar declarado'
  expectation_HasAttribute_target: '%{binding} %{must} declarar un atributo %{target}'
  expectation_HasBinding: '%{binding} %{must} estar declarado'
  expectation_HasBinding_target: '%{binding} %{must} declarar %{target}'
  expectation_HasClass: 'la clase %{binding} %{must} estar declarada'
  expectation_HasClass_target: '%{binding} %{must} declarar una clase %{target}'
  expectation_HasComposition: '%{binding} %{must} usar composición'
  expectation_HasComprehension: '%{binding} %{must} emplear listas por comprensión'
  expectation_HasComputation: '%{binding} %{must} estar declarado'
  expectation_HasComputation_target: '%{binding} %{must} declarar %{target}'
  expectation_HasConditional: '%{binding} %{must} utilizar condicionales'
  expectation_HasDirectRecursion: '%{binding} %{must} emplear recursión'
  expectation_HasEntryPoint: '%{binding} %{must} declarar un punto de entrada'
  expectation_HasFact: 'el hecho %{binding} %{must} estar declarado'
  expectation_HasFact_target: '%{binding} %{must} declarar un hecho %{target}'
  expectation_HasFindall: '%{binding} %{must} utilizar findall'
  expectation_HasForall: '%{binding} %{must} utilizar forall'
  expectation_HasForeach: '%{binding} %{must} usar una repetición indexada (sentencia <i>foreach</i>)'
  expectation_HasFunction: 'la función %{binding} %{must} estar declarada'
  expectation_HasFunction_target: '%{binding} %{must} declarar una función %{target}'
  expectation_HasGuards: '%{binding} %{must} usar guardas'
  expectation_HasIf: '%{binding} %{must} usar if'
  expectation_HasLambda: '%{binding} %{must} emplear expresiones lambda'
  expectation_HasMethod_target: '%{binding} %{must} declarar un método %{target}'
  expectation_HasMethod_target: 'el método %{binding} %{must} declarado'
  expectation_HasNot: '%{binding} %{must} utilizar not'
  expectation_HasObject: 'el objeto %{binding} %{must} estar declarado'
  expectation_HasObject_target: '%{binding} %{must} declarar un objeto %{target}'
  expectation_HasPatternMatching: '%{binding} %{must} utilizar pattern matching'
  expectation_HasPredicate: 'el predicado %{binding} %{must} estar declarado'
  expectation_HasProcedure: 'el procedimiento %{binding} %{must} estar declarado'
  expectation_HasProcedure_target: '%{binding} %{must} declarar un procedimiento %{target}'
  expectation_HasRedundantBooleanComparison: '%{binding} hace comparaciones booleanas innecesarias'
  expectation_HasRedundantGuards: '%{binding} tiene guardas innecesarias'
  expectation_HasRedundantIf: '%{binding} tiene ifs innecesarios'
  expectation_HasRedundantLambda: '%{binding} tiene lambdas innecesarias'
  expectation_HasRedundantParameter: '%{binding} tiene parámetros innecesarios (se pueden eliminar mediante point-free)'
  expectation_HasRepeat: '%{binding} %{must} usar una repetición simple (sentencia <i>repeat</i>)'
  expectation_HasRepeat: '%{binding} %{must} utilizar un repeat'
  expectation_HasRepeatOf: '%{binding} %{must} usar una repetición simple (sentencia <i>repeat</i>) de %{target}'
  expectation_HasRule: 'la regla %{binding} %{must} estar declarada'
  expectation_HasRule_target: '%{binding} %{must} declarar una regla %{target}'
  expectation_HasSwitch: '%{binding} %{must} utilizar un switch'
  expectation_HasTypeAlias: 'el sinónimo de tipo %{binding} %{must} debe estar declarado'
  expectation_HasTypeAlias_target: '%{binding} %{must} declarar un sinónimo de tipo %{target}'
  expectation_HasTypeSignature: La firma %{binding} %{must} ser declarada
  expectation_HasTypeSignature_target: '%{binding} %{must} declarar una firma %{}'
  expectation_HasUnifyOperator: '%{binding} %{must} utilizar el operador de unificación (=)'
  expectation_HasUsage: '%{binding} %{must} utilizar %{target}'
  expectation_HasUsage_target: '%{binding} %{must} utilizar %{target}'
  expectation_HasVariable: 'la variable %{binding} %{must} estar declarada'
  expectation_HasVariable_target: '%{binding} %{must} declarar una variable %{target}'
  expectation_HasWhile: '%{binding} %{must} utilizar repetición condicional (sentencia <i>while</i>)'
