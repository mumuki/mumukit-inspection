---
es:
  expectation_Declares: '%{binding} %{must} contener declaraciones'
  expectation_Declares_like: '%{binding} %{must} declarar un identificador parecido a %{target}'
  expectation_Declares_named: '%{binding} %{must} declarar %{target}'
  expectation_Declares_except: '%{binding} %{must} contener declaraciones distintas a %{target}'
  expectation_DeclaresAttribute: '%{binding} %{must} declarar atributos'
  expectation_DeclaresAttribute_like: '%{binding} %{must} declarar un atributo parecido a %{target}'
  expectation_DeclaresAttribute_named: '%{binding} %{must} declarar un atributo %{target}'
  expectation_DeclaresAttribute_except: '%{binding} %{must} declarar atributos diferentes a %{target}'
  expectation_DeclaresClass: '%{binding} %{must} declarar clases'
  expectation_DeclaresClass_like: '%{binding} %{must} declarar una clase parecida a %{target}'
  expectation_DeclaresClass_named: '%{binding} %{must} declarar una clase %{target}'
  expectation_DeclaresClass_except: '%{binding} %{must} declarar clases diferentes a %{target}'
  expectation_DeclaresComputation: '%{binding} %{must} declarar computaciones'
  expectation_DeclaresComputation_like: '%{binding} %{must} declarar una computación parecida a %{target}'
  expectation_DeclaresComputation_named: '%{binding} %{must} declarar una computación %{target}'
  expectation_DeclaresComputation_except: '%{binding} %{must} declarar computaciones diferentes a %{target}'
  expectation_DeclaresComputationWithArity0_named: '%{target} %{must} declarar cero parametros'
  expectation_DeclaresComputationWithArity1_named: '%{target} %{must} tener un parámetro'
  expectation_DeclaresComputationWithArity2_named: '%{target} %{must} tener dos parámetros'
  expectation_DeclaresComputationWithArity3_named: '%{target} %{must} tener tres parámetros'
  expectation_DeclaresComputationWithArity4_named: '%{target} %{must} tener cuatro parámetros'
  expectation_DeclaresComputationWithArity5_named: '%{target} %{must} tener cinco parámetros'
  expectation_DeclaresEntryPoint: '%{binding} %{must} declarar un punto de entrada'
  expectation_DeclaresFact: '%{binding} %{must} declarar hechos'
  expectation_DeclaresFact_named: '%{binding} %{must} declarar un hecho %{target}'
  expectation_DeclaresFact_named: '%{binding} %{must} declarar un hecho parecido a %{target}'
  expectation_DeclaresFact_except: '%{binding} %{must} declarar hechos diferentes a %{target}'
  expectation_DeclaresFunction: '%{binding} %{must} debe declarar funciones'
  expectation_DeclaresFunction_like: '%{binding} %{must} declarar una función parecida a %{target}'
  expectation_DeclaresFunction_named: '%{binding} %{must} declarar una función %{target}'
  expectation_DeclaresFunction_except: '%{binding} %{must} declarar funciones diferentes a %{target}'
  expectation_DeclaresMethod: '%{binding} %{must} declarar métodos'
  expectation_DeclaresMethod_like: '%{binding} %{must} declarar un método parecido a %{target}'
  expectation_DeclaresMethod_named: '%{binding} %{must} declarar un método %{target}'
  expectation_DeclaresMethod_except: '%{binding} %{must} declarar métodos diferentes a %{target}'
  expectation_DeclaresObject: '%{binding} %{must} declarar objetos'
  expectation_DeclaresObject_like: '%{binding} %{must} declarar un objeto parecido a%{target}'
  expectation_DeclaresObject_named: '%{binding} %{must} declarar un objeto %{target}'
  expectation_DeclaresObject_except: '%{binding} %{must} declarar objetos diferentes a %{target}'
  expectation_DeclaresProcedure: '%{binding} %{must} declarar procedimientos'
  expectation_DeclaresProcedure_like: '%{binding} %{must} declarar un procedimiento parecido a %{target}'
  expectation_DeclaresProcedure_named: '%{binding} %{must} declarar un procedimiento %{target}'
  expectation_DeclaresProcedure_except: '%{binding} %{must} declarar procedimientos diferentes a %{target}'
  expectation_DeclaresPredicate: '%{binding} %{must} declarar predicados'
  expectation_DeclaresPredicate_like: '%{binding} %{must} declarar un predicados parecido a %{target}'
  expectation_DeclaresPredicate_named: '%{binding} %{must} declarar un predicados %{target}'
  expectation_DeclaresPredicate_except: '%{binding} %{must} declarar predicados diferentes a %{target}'
  expectation_DeclaresRule: '%{binding} %{must} debe declarar reglas'
  expectation_DeclaresRule_like: '%{binding} %{must} declarar una regla parecida a %{target}'
  expectation_DeclaresRule_named: '%{binding} %{must} declarar una regla %{target}'
  expectation_DeclaresRule_except: '%{binding} %{must} declarar reglas diferentes a %{target}'
  expectation_DeclaresRecursively_named: '%{target} %{must} estar declarado recursivamente'
  expectation_DeclaresTypeAlias: '%{binding} %{must} declarar sinónimos de tipo'
  expectation_DeclaresTypeAlias_like: '%{binding} %{must} declarar un sinónimo de tipo parecido a %{target}'
  expectation_DeclaresTypeAlias_named: '%{binding} %{must} declarar un sinónimo de tipo %{target}'
  expectation_DeclaresTypeAlias_except: '%{binding} %{must} declarar sinónimos de tipo diferentes a %{target}'
  expectation_DeclaresTypeSignature: '%{binding} %{must} decarar firmas de tipos'
  expectation_DeclaresTypeSignature_like: '%{binding} %{must} declarar una firma para algo parecido %{target}'
  expectation_DeclaresTypeSignature_named: '%{binding} %{must} declarar una firma %{target}'
  expectation_DeclaresTypeSignature_except: '%{binding} %{must} declarar firmas de tipos diferentes a %{target}'
  expectation_DeclaresVariable: '%{binding} %{must} debe declarar variables'
  expectation_DeclaresVariable_like: '%{binding} %{must} declarar una variable parecida a %{target}'
  expectation_DeclaresVariable_named: '%{binding} %{must} declarar una variable %{target}'
  expectation_DeclaresVariable_except: '%{binding} %{must} declarar variables diferentes a %{target}'
  expectation_DoesTypeTest: '%{binding} hace comparaciones de strings innecesarias'
  expectation_HasRedundantBooleanComparison: '%{binding} hace comparaciones booleanas innecesarias'
  expectation_HasRedundantGuards: '%{binding} tiene guardas innecesarias'
  expectation_HasRedundantIf: '%{binding} tiene ifs innecesarios'
  expectation_HasRedundantLambda: '%{binding} tiene lambdas innecesarias'
  expectation_HasRedundantParameter: '%{binding} tiene parámetros innecesarios (se pueden eliminar mediante point-free)'
  expectation_must: debe
  expectation_must_not: no debe
  expectation_solution: la solución
  expectation_Uses: '%{binding} %{must} ser utilizado'
  expectation_Uses: '%{binding} %{must} delegar'
  expectation_Uses_like: '%{binding} %{must} delegar en algo parecido a %{target}'
  expectation_Uses_named: '%{binding} %{must} utilizar %{target}'
  expectation_Uses_except: '%{binding} %{must} delegar en algo diferente a %{target}'
  expectation_UsesAnonymousVariable: '%{binding} %{must} utilizar una variable anónima'
  expectation_UsesComposition: '%{binding} %{must} usar composición'
  expectation_UsesComprehension: '%{binding} %{must} emplear listas por comprensión'
  expectation_UsesConditional: '%{binding} %{must} utilizar condicionales'
  expectation_UsesFindall: '%{binding} %{must} utilizar findall'
  expectation_UsesForall: '%{binding} %{must} utilizar forall'
  expectation_UsesForeach: '%{binding} %{must} usar una repetición indexada (sentencia <i>foreach</i>)'
  expectation_UsesGuards: '%{binding} %{must} usar guardas'
  expectation_UsesIf: '%{binding} %{must} usar if'
  expectation_UsesLambda: '%{binding} %{must} emplear expresiones lambda'
  expectation_UsesNot: '%{binding} %{must} utilizar not'
  expectation_UsesPatternMatching: '%{binding} %{must} utilizar pattern matching'
  expectation_UsesRepeat: '%{binding} %{must} usar una repetición simple (sentencia <i>repeat</i>)'
  expectation_UsesRepeatOf: '%{binding} %{must} usar una repetición simple (sentencia <i>repeat</i>) de %{target}'
  expectation_UsesSwitch: '%{binding} %{must} utilizar un switch'
  expectation_UsesUnifyOperator: '%{binding} %{must} utilizar el operador de unificación (=)'
  expectation_UsesWhile: '%{binding} %{must} utilizar repetición condicional (sentencia <i>while</i>)'
