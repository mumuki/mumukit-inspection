---
es:
  expectation_Assigns_except: '%{binding} %{must} asignar a algo diferente a %{target}'
  expectation_Assigns_like: '%{binding} %{must} asignar algo parecido a %{target}'
  expectation_Assigns_named: '%{binding} %{must} asignar %{target}'
  expectation_Assigns: '%{binding} %{must} realizar asignaciones'
  expectation_Calls_except: '%{binding} %{must} delegar en algo diferente a %{target}'
  expectation_Calls_like: '%{binding} %{must} delegar en algo parecido a %{target}'
  expectation_Calls_named: '%{binding} %{must} utilizar %{target}'
  expectation_Calls: '%{binding} %{must} delegar'
  expectation_Declares_except: '%{binding} %{must} contener declaraciones distintas a %{target}'
  expectation_Declares_like: '%{binding} %{must} declarar un identificador parecido a %{target}'
  expectation_Declares_named: '%{binding} %{must} declarar %{target}'
  expectation_Declares: '%{binding} %{must} contener declaraciones'
  expectation_DeclaresAttribute_except: '%{binding} %{must} declarar atributos diferentes a %{target}'
  expectation_DeclaresAttribute_like: '%{binding} %{must} declarar un atributo parecido a %{target}'
  expectation_DeclaresAttribute_named: '%{binding} %{must} declarar un atributo %{target}'
  expectation_DeclaresAttribute: '%{binding} %{must} declarar atributos'
  expectation_DeclaresClass_except: '%{binding} %{must} declarar clases diferentes a %{target}'
  expectation_DeclaresClass_like: '%{binding} %{must} declarar una clase parecida a %{target}'
  expectation_DeclaresClass_named: '%{binding} %{must} declarar una clase %{target}'
  expectation_DeclaresClass: '%{binding} %{must} declarar clases'
  expectation_DeclaresComputation_except: '%{binding} %{must} declarar computaciones diferentes a %{target}'
  expectation_DeclaresComputation_like: '%{binding} %{must} declarar una computación parecida a %{target}'
  expectation_DeclaresComputation_named: '%{binding} %{must} declarar una computación %{target}'
  expectation_DeclaresComputation: '%{binding} %{must} declarar computaciones'
  expectation_DeclaresComputationWithArity0_named: '%{target} %{must} declarar cero parametros'
  expectation_DeclaresComputationWithArity1_named: '%{target} %{must} tener un parámetro'
  expectation_DeclaresComputationWithArity2_named: '%{target} %{must} tener dos parámetros'
  expectation_DeclaresComputationWithArity3_named: '%{target} %{must} tener tres parámetros'
  expectation_DeclaresComputationWithArity4_named: '%{target} %{must} tener cuatro parámetros'
  expectation_DeclaresComputationWithArity5_named: '%{target} %{must} tener cinco parámetros'
  expectation_DeclaresEntryPoint: '%{binding} %{must} declarar un punto de entrada'
  expectation_DeclaresEnumeration_except: '%{binding} %{must} declarar enumeraciones que no se llamen %{target}'
  expectation_DeclaresEnumeration_like: '%{binding} %{must} declarar una enumeracion de nombre parecido a %{target}'
  expectation_DeclaresEnumeration_named: '%{binding} %{must} declarar una enumeracion %{target}'
  expectation_DeclaresEnumeration: '%{binding} %{must} declarar enumeraciones'
  expectation_DeclaresFact_except: '%{binding} %{must} declarar hechos diferentes a %{target}'
  expectation_DeclaresFact_like: '%{binding} %{must} declarar un hecho parecido a %{target}'
  expectation_DeclaresFact_named: '%{binding} %{must} declarar un hecho %{target}'
  expectation_DeclaresFact: '%{binding} %{must} declarar hechos'
  expectation_DeclaresFunction_except: '%{binding} %{must} declarar funciones diferentes a %{target}'
  expectation_DeclaresFunction_like: '%{binding} %{must} declarar una función parecida a %{target}'
  expectation_DeclaresFunction_named: '%{binding} %{must} declarar una función %{target}'
  expectation_DeclaresFunction: '%{binding} %{must} debe declarar funciones'
  expectation_DeclaresInterface_except: '%{binding} %{must} declarar interfaces que no se llamen %{target}'
  expectation_DeclaresInterface_like: '%{binding} %{must} declarar una interfaz de nombre parecido a %{target}'
  expectation_DeclaresInterface_named: '%{binding} %{must} declarar una interfaz %{target}'
  expectation_DeclaresInterface: '%{binding} %{must} declarar interfaces'
  expectation_DeclaresMethod_except: '%{binding} %{must} declarar métodos diferentes a %{target}'
  expectation_DeclaresMethod_like: '%{binding} %{must} declarar un método parecido a %{target}'
  expectation_DeclaresMethod_named: '%{binding} %{must} declarar un método %{target}'
  expectation_DeclaresMethod: '%{binding} %{must} declarar métodos'
  expectation_DeclaresObject_except: '%{binding} %{must} declarar objetos diferentes a %{target}'
  expectation_DeclaresObject_like: '%{binding} %{must} declarar un objeto parecido a%{target}'
  expectation_DeclaresObject_named: '%{binding} %{must} declarar un objeto %{target}'
  expectation_DeclaresObject: '%{binding} %{must} declarar objetos'
  expectation_DeclaresPredicate_except: '%{binding} %{must} declarar predicados diferentes a %{target}'
  expectation_DeclaresPredicate_like: '%{binding} %{must} declarar un predicados parecido a %{target}'
  expectation_DeclaresPredicate_named: '%{binding} %{must} declarar un predicados %{target}'
  expectation_DeclaresPredicate: '%{binding} %{must} declarar predicados'
  expectation_DeclaresProcedure_except: '%{binding} %{must} declarar procedimientos diferentes a %{target}'
  expectation_DeclaresProcedure_like: '%{binding} %{must} declarar un procedimiento parecido a %{target}'
  expectation_DeclaresProcedure_named: '%{binding} %{must} declarar un procedimiento %{target}'
  expectation_DeclaresProcedure: '%{binding} %{must} declarar procedimientos'
  expectation_DeclaresRecursively_named: '%{target} %{must} estar declarado recursivamente'
  expectation_DeclaresRule_except: '%{binding} %{must} declarar reglas diferentes a %{target}'
  expectation_DeclaresRule_like: '%{binding} %{must} declarar una regla parecida a %{target}'
  expectation_DeclaresRule_named: '%{binding} %{must} declarar una regla %{target}'
  expectation_DeclaresRule: '%{binding} %{must} debe declarar reglas'
  expectation_DeclaresStyle_except: '%{binding} %{must} declarar un estilo diferente a %{target}'
  expectation_DeclaresStyle_like: '%{binding} %{must} declarar un estilo parecido a %{target}'
  expectation_DeclaresStyle_named: '%{binding} %{must} declarar un estilo %{target}'
  expectation_DeclaresStyle: '%{binding} %{must} declarar un estilo'
  expectation_DeclaresSuperclass_except: '%{binding} %{must} declarar una superclase distinta de %{target}'
  expectation_DeclaresSuperclass_like: '%{binding} %{must} declarar una superclase parecida a %{target}'
  expectation_DeclaresSuperclass_named: '%{binding} %{must} declarar una superclase %{target}'
  expectation_DeclaresSuperclass: '%{binding} %{must} declarar una superclase'
  expectation_DeclaresTag_except: '%{binding} %{must} declarar un elemento diferente a %{target}'
  expectation_DeclaresTag_like: '%{binding} %{must} declarar un elemento parecido a %{target}'
  expectation_DeclaresTag_named: '%{binding} %{must} declarar un elemento %{target}'
  expectation_DeclaresTag: '%{binding} %{must} declarar un elemento'
  expectation_DeclaresTypeAlias_except: '%{binding} %{must} declarar sinónimos de tipo diferentes a %{target}'
  expectation_DeclaresTypeAlias_like: '%{binding} %{must} declarar un sinónimo de tipo parecido a %{target}'
  expectation_DeclaresTypeAlias_named: '%{binding} %{must} declarar un sinónimo de tipo %{target}'
  expectation_DeclaresTypeAlias: '%{binding} %{must} declarar sinónimos de tipo'
  expectation_DeclaresTypeSignature_except: '%{binding} %{must} declarar firmas de tipos diferentes a %{target}'
  expectation_DeclaresTypeSignature_like: '%{binding} %{must} declarar una firma para algo parecido %{target}'
  expectation_DeclaresTypeSignature_named: '%{binding} %{must} declarar una firma %{target}'
  expectation_DeclaresTypeSignature: '%{binding} %{must} declarar firmas de tipos'
  expectation_DeclaresVariable_except: '%{binding} %{must} declarar variables diferentes a %{target}'
  expectation_DeclaresVariable_like: '%{binding} %{must} declarar una variable parecida a %{target}'
  expectation_DeclaresVariable_named: '%{binding} %{must} declarar una variable %{target}'
  expectation_DeclaresVariable: '%{binding} %{must} debe declarar variables'
  expectation_DiscardsExceptions: '%{binding} está ignorando exceptiones silenciosamiente.'
  expectation_DoesConsolePrint: '%{binding} está realizando impresiones por pantalla.'
  expectation_DoesNilTest: '%{binding} hace comparaciones contra <i>%{keyword_null}</i>'
  expectation_DoesNullTest: '%{binding} hace comparaciones contra <i>%{keyword_null}</i>'
  expectation_DoesTypeTest: '%{binding} hace comparaciones contra strings'
  expectation_HasAssignmentReturn: '%{binding} devuelve el resultado de una asignación'
  expectation_HasCodeDuplication: '%{binding} tiene código repetido'
  expectation_HasEmptyIfBranches: '%{binding} tiene ramas de <i>%{keyword_if}</i> vacías'
  expectation_HasMisspelledBindings: '%{binding} está mal escrito. Revisá la ortografía y procurá no usar abreviaturas'
  expectation_HasMisspelledIdentifiers: '%{binding} está mal escrito. Revisá la ortografía y procurá no usar abreviaturas'
  expectation_HasRedundantBooleanComparison: '%{binding} hace comparaciones booleanas innecesarias'
  expectation_HasRedundantGuards: '%{binding} tiene guardas innecesarias'
  expectation_HasRedundantIf: '%{binding} tiene ifs innecesarios'
  expectation_HasRedundantLambda: '%{binding} tiene lambdas innecesarias'
  expectation_HasRedundantLocalVariableReturn: '%{binding} usa variables locales innecesarias; podés retornar directamente la expresión'
  expectation_HasRedundantParameter: '%{binding} tiene parámetros innecesarios (se pueden eliminar mediante point-free)'
  expectation_HasRedundantReduction: '%{binding} usa <i>%{keyword_is}</i>, pero no realiza cálculos.'
  expectation_HasTooShortBindings: '%{binding} es un identificador muy corto'
  expectation_HasTooShortIdentifiers: '%{binding} es un identificador muy corto'
  expectation_HasUnreachableCode: '%{binding} tiene código inalcanzable.'
  expectation_HasWrongCaseBindings: '%{binding} no respeta la convención de nombres'
  expectation_HasWrongCaseIdentifiers: '%{binding} no respeta la convención de nombres'
  expectation_Implements_except: '%{binding} %{must} implementar interfaces distintas de %{target}'
  expectation_Implements_like: '%{binding} %{must} implementar insterfaces parecidas a %{target}'
  expectation_Implements_named: '%{binding} %{must} implementar %{target}'
  expectation_Implements: '%{binding} %{must} implementar intefaces'
  expectation_Inherits_except: '%{binding} %{must} declarar una superclase distinta de %{target}'
  expectation_Inherits_like: '%{binding} %{must} declarar una superclase parecida a %{target}'
  expectation_Inherits_named: '%{binding} %{must} declarar una superclase %{target}'
  expectation_Inherits: '%{binding} %{must} declarar una superclase'
  expectation_Instantiates_except: '%{binding} %{must} instanciar clases distintas de %{target}'
  expectation_Instantiates_like: '%{binding} %{must} instanciar clases parecidas a %{target}'
  expectation_Instantiates_named: '%{binding} %{must} instanciar %{target}'
  expectation_Instantiates: '%{binding} %{must} instanciar objetos'
  expectation_IsLongCode: '%{binding} es muy largo. Tratá de delegar más'
  expectation_must_not: no debe
  expectation_must: debe
  expectation_Raises_except: '%{binding} %{must} lanzar excepciones diferentes a %{target}'
  expectation_Raises_like: '%{binding} %{must} lanzar excepciones parecidas a %{target}'
  expectation_Raises_named: '%{binding} %{must} lanzar %{target}'
  expectation_Raises: '%{binding} %{must} lanzar exceptiones'
  expectation_Rescues_except: '%{binding} %{must} capturar excepciones diferentes a %{target}'
  expectation_Rescues_like: '%{binding} %{must} capturar excepciones parecidas a %{target}'
  expectation_Rescues_named: '%{binding} %{must} capturar %{target}'
  expectation_Rescues: '%{binding} %{must} capturar exceptiones'
  expectation_ReturnsNil: '%{binding} retorna null, lo cual es una mala práctica'
  expectation_ReturnsNull: '%{binding} retorna null, lo cual es una mala práctica'
  expectation_solution: la solución
  expectation_SourceContains_named: 'la solución %{must} usar %{target}'
  expectation_SourceEquals_named: 'la solución %{must} ser igual a %{target}'
  expectation_SourceEqualsIgnoreSpaces_named: 'la solución %{must} ser igual a %{target}'
  expectation_SourceRepeats_named: 'la solución %{must} usar %{target} más de una vez'
  expectation_TypesAs_named: '%{binding} %{must} ser de tipo %{target}'
  expectation_TypesAs: '%{binding} %{must} tipar'
  expectation_TypesReturnAs_named: '%{binding} %{must} tipar su valor de retorno como %{target}'
  expectation_TypesReturnAs: '%{binding} %{must} tipar su valor de retorno'
  expectation_Uses_except: '%{binding} %{must} delegar en algo diferente a %{target}'
  expectation_Uses_like: '%{binding} %{must} delegar en algo parecido a %{target}'
  expectation_Uses_named: '%{binding} %{must} utilizar %{target}'
  expectation_Uses: '%{binding} %{must} delegar'
  expectation_UsesAnonymousVariable: '%{binding} %{must} utilizar una variable anónima'
  expectation_UsesComposition: '%{binding} %{must} usar composición'
  expectation_UsesComprehension: '%{binding} %{must} emplear listas por comprensión'
  expectation_UsesConditional: '%{binding} %{must} utilizar condicionales'
  expectation_UsesCut: '%{binding} usa el operador !, lo cual es una mala práctica'
  expectation_UsesExceptionHandling: '%{binding} %{must} realizar manejo de exceptiones'
  expectation_UsesExceptions: '%{binding} %{must} usar exceptiones'
  expectation_UsesFail: '%{binding} usa <i>%{keyword_fail}</li>, lo cual es una mala práctica'
  expectation_UsesFindall: '%{binding} %{must} utilizar <i>%{keyword_findall}</i>'
  expectation_UsesForall: '%{binding} %{must} utilizar <i>%{keyword_forall}</i>'
  expectation_UsesForeach: '%{binding} %{must} usar <i>%{keyword_foreach}</i>'
  expectation_UsesGuards: '%{binding} %{must} usar guardas'
  expectation_UsesIf: '%{binding} %{must} usar <i>%{keyword_if}</i>'
  expectation_UsesInheritance: '%{binding} %{must} usar herencia'
  expectation_UsesLambda: '%{binding} %{must} emplear expresiones lambda'
  expectation_UsesMixins: '%{binding} %{must} usar mixins'
  expectation_UsesNot: '%{binding} %{must} utilizar <i>%{keyword_not}</i>'
  expectation_UsesPatternMatching: '%{binding} %{must} utilizar pattern matching'
  expectation_UsesRepeat: '%{binding} %{must} usar <i>%{keyword_repeat}</i>'
  expectation_UsesRepeatOf: '%{binding} %{must} usar un <i>%{keyword_repeat}</i> de %{target}'
  expectation_UsesSwitch: '%{binding} %{must} utilizar un <i>%{keyword_switch}</i>'
  expectation_UsesUnificationOperator: '%{binding} usa el operador de unificación (=)'
  expectation_UsesWhile: '%{binding} %{must} utilizar un <i>%{keyword_while}</i>'
